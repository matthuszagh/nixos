# -*- mode: snippet -*-
# name: skidl frequency simulation
# key: skidlf
# expand-env: ((yas-indent-line nil))
# --
#+begin_src python :results output silent :hidden
from skidl.pyspice import (
    generate_netlist,
    Part,
    gnd,
    lib_search_paths,
    SPICE,
    node,
)
from libcircuit.spice import capacitor_equiv, resistor_equiv
import numpy as np

fname = "data/$1.dat"
lib_search_paths[SPICE].append("/home/matt/src/spicelib")

vs = Part("pyspice", "SINEV", amplitude=1)
# component declaration
rload = Part("pyspice", "R", value=1e3)
$2

# component connections
gnd += vs["n"], rload["n"]
$3

# generate netlist and waveforms
circ = generate_netlist(libs="/home/matt/src/spicelib")
sim = circ.simulator()
waveforms = sim.ac(
    variation="dec",
    number_of_points=${4:100},
    start_frequency=${5:1},
    stop_frequency=${6:1e5},
)

freq = waveforms.frequency
vin = waveforms[node(vs["p"])]
vout = waveforms[node(rload["p"])]

with open(fname, "w") as f:
    f.write("{:<15} {:<15} {:<15}\n".format("freq", "vratio", "phase"))
    for fr, vin, vout in zip(
        freq.as_ndarray(), vin.as_ndarray(), vout.as_ndarray()
    ):
        db = 20 * np.log10(abs(vout) / abs(vin))
        arg = np.imag(vout / vin) / np.real(vout / vin)
        f.write(
            "{:<15.2f} {:<15.5f} {:<15.5f}\n".format(fr, db, np.arctan(arg))
        )
#+end_src

\begin{tikzpicture}
\begin{semilogxaxis}[
  title=$7,
  ylabel={$G_V$ (dB)},
  xlabel={$f$},
  xticklabels=\empty
]
  \addplot [] table[x=freq, y=vratio] {$1};
\end{semilogxaxis}
\end{tikzpicture}$0