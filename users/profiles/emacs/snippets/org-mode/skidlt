# -*- mode: snippet -*-
# name: skidl time simulation
# key: skidlt
# expand-env: ((yas-indent-line nil))
# --
#+begin_src python :results output silent :hidden
from skidl.pyspice import (
    generate_netlist,
    Part,
    gnd,
    lib_search_paths,
    SPICE,
    node,
)
from libcircuit.spice import capacitor_equiv, resistor_equiv
import numpy as np

fname = "data/$1.dat"
lib_search_paths[SPICE].append("/home/matt/src/spicelib")

vs = Part("pyspice", "SINEV", amplitude=1, frequency=60)
# component declaration
rload = Part("pyspice", "R", value=1e3)
$2

# component connections
gnd += vs["n"], rload["n"]
$3

# generate netlist and waveforms
circ = generate_netlist(libs="/home/matt/src/spicelib")
sim = circ.simulator()
waveforms = sim.transient(step_time=${4:1e-4}, end_time=${5:50e-3})

time = waveforms.time
vin = waveforms[node(vs["p"])]
vout = waveforms[node(rload["p"])]

with open(fname, "w") as f:
    f.write("{:<6} {:<6} {:<6}\n".format("t", "vin", "vout"))
    for t, vin, vout in zip(
        time.as_ndarray() * 1e3, vin.as_ndarray(), vout.as_ndarray()
    ):
        f.write("{:<6.5f} {:<6.2f} {:<6.2f}\n".format(t, vin, vout))
#+end_src

\begin{tikzpicture}
\begin{axis}[
  title=$6,
  ylabel={$V$},
  xlabel={$t$ (ms)},
  legend entries={$V_{in}$, $V_{out}$},
  legend style={
    fill=bg,
    draw=fgcolor
  }
]
  \addplot [] table[x=t, y=vin] {data/$1.dat};

  \addplot [
    blue!20
  ] table[x=t, y=vout] {data/$1.dat};
\end{axis}
\end{tikzpicture}$0