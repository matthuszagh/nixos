# .latexmkrc starts
# $pdf_mode = 1;
# $latex = 'latex  %O  --shell-escape %S';
# $pdflatex = 'pdflatex  %O  --shell-escape %S';

# lualatex
$pdf_mode = 4;
$postscript_mode = $dvi_mode = 0;

# Asymptote
sub asy {return system("asy \"$_[0]\"");}
add_cus_dep("asy","eps",0,"asy");
add_cus_dep("asy","pdf",0,"asy");
add_cus_dep("asy","tex",0,"asy");

# add_cus_dep("asy","eps",0,"asy2eps");
# add_cus_dep("asy","pdf",0,"asy2pdf");
# add_cus_dep("asy","tex",0,"asy2tex");

# sub asy2eps { return asy2x( $_[0], 'eps' ); }
# sub asy2pdf { return asy2x( $_[0], 'pdf' ); }
# sub asy2tex { return asy2x( $_[0], 'tex' ); }

# sub asy2x   {
#    my $ret = system("asy -vv -f '$_[1]' '$_[0]' >& '$_[0].log'");
#    my $FH = new FileHandle;
#    open $FH, "$_[0].log";
#    %imp = ();

#    while (<$FH>) {
#        if (/^(Including|Loading) .* from (.*)\s*$/) {
#           my $import = $2;
# 	  $imp{$import} = 1;
#        }
#        elsif ( /^error/ || /^.*\.asy: \d/ ) {
#            warn "==Message from asy: $_";
# 	   $ret = 1;
#        }
#        elsif ( /^kpsewhich / || /^Processing / || /^Using /
#                || /^Welcome / || /^Wrote /|| /^cd /|| /^gs /
# 	     ) {
#        }
#        else {
#            warn "==Message from asy: $_";
#        }
#    }
#    close $FH;
#    rdb_set_source( $rule, keys %imp );
#    return $ret;
# }

# Support for pythontex in v. 0.16 or higher, with latexmk 4.62 or higher
#
# What these definitions provide/do:
# 1. Variable specifying command string for invoking pythontex
# 2. Addition to %extra_rule_spec of template for pythontex rule. This
#    tells latexmkrc to create the rule when it is initializing for
#    processing a TeX file.
# 3. A subroutine mypythontex that the pythontex rule is defined to
#    call. This runs pythontex and then sets dependency information.
# 4. Settings for the files generated by the pythontex package and the
#    pythontex program so that the files are deleted in a clean-up
#    operation.

$clean_ext .= " pythontex-files-%R/* pythontex-files-%R";
push @generated_exts, 'pytxcode';

$pythontex = 'pythontex %O %S';
$extra_rule_spec{'pythontex'}  = [ 'internal', '', 'mypythontex', "%Y%R.pytxcode",  "%Ypythontex-files-%R/%R.pytxmcr",    "%R", 1 ];

sub mypythontex {
   my $result_dir = $aux_dir1."pythontex-files-$$Pbase";
   my $ret = Run_subst( $pythontex, 2 );
   rdb_add_generated( glob "$result_dir/*" );
   my $fh = new FileHandle $$Pdest, "r";
   if ($fh) {
      while (<$fh>) {
         if ( /^%PythonTeX dependency:\s+'([^']+)';/ ) {
	     print "Found pythontex dependency '$1'\n";
             rdb_ensure_file( $rule, $aux_dir1.$1 );
	 }
      }
      undef $fh;
   }
   else {
       warn "mypythontex: I could not read '$$Pdest'\n",
            "  to check dependencies\n";
   }
   return $ret;
}

add_cus_dep('pytxcode', 'tex', 0, 'pythontex');
sub pythontex { return system("pythontex \"$_[0]\""); }
# .latexmkrc ends
